"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[737],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=i.createContext({}),c=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return i.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},f=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),f=r,h=u["".concat(l,".").concat(f)]||u[f]||d[f]||o;return n?i.createElement(h,a(a({ref:t},p),{},{components:n})):i.createElement(h,a({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,a[1]=s;for(var c=2;c<o;c++)a[c]=n[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3819:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var i=n(7462),r=(n(7294),n(3905));const o={title:"Usage",description:"Explains how to use the reconstitutor library."},a=void 0,s={unversionedId:"reconstitutor/usage",id:"reconstitutor/usage",title:"Usage",description:"Explains how to use the reconstitutor library.",source:"@site/docs/reconstitutor/02-usage.md",sourceDirName:"reconstitutor",slug:"/reconstitutor/usage",permalink:"/reconstitutor/usage",draft:!1,editUrl:"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/reconstitutor/02-usage.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Usage",description:"Explains how to use the reconstitutor library."},sidebar:"docs",previous:{title:"Introduction & Installation",permalink:"/reconstitutor/intro"},next:{title:"rekalogika/temporary-url-bundle",permalink:"/temporary-url-bundle/"}},l={},c=[{value:"Reconstitution of a Class",id:"reconstitution-of-a-class",level:2},{value:"Reconstitution of Classes With a Specific PHP Attribute",id:"reconstitution-of-classes-with-a-specific-php-attribute",level:2},{value:"<code>get()</code> and <code>set()</code> Helpers",id:"get-and-set-helpers",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Because everyone knows about file uploads, we are going to use it as an\nexample, even if you probably won't use this framework as a means for handling\nfile uploads."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"We also provide ",(0,r.kt)("a",{parentName:"p",href:"../file"},(0,r.kt)("inlineCode",{parentName:"a"},"rekalogika/file"))," framework that handles file uploads\nand so much more. It also utilizes this library behind the scenes.")),(0,r.kt)("h2",{id:"reconstitution-of-a-class"},"Reconstitution of a Class"),(0,r.kt)("p",null,"This will apply to objects that are instances of a specific class, subclasses\nof a specific class, or implement a specific interface."),(0,r.kt)("p",null,"Suppose you have an ",(0,r.kt)("inlineCode",{parentName:"p"},"Order")," object that stores a payment receipt in the\n",(0,r.kt)("inlineCode",{parentName:"p"},"paymentReceipt")," property:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"use Symfony\\Component\\HttpFoundation\\File\\File;\nuse Symfony\\Component\\Uid\\UuidV7;\n\nclass Order\n{\n    private string $id;\n    private ?File $paymentReceipt = null;\n\n    public function __construct()\n    {\n        $this->id = new UuidV7;\n    }\n\n    public function getId(): string\n    {\n        return $this->id;\n    }\n\n    public function getPaymentReceipt(): ?File\n    {\n        return $this->paymentReceipt;\n    }\n\n    public function setPaymentReceipt(File $paymentReceipt): void\n    {\n        $this->paymentReceipt = $paymentReceipt;\n    }\n}\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"In the above class, Doctrine related attributes are omitted for brevity.")),(0,r.kt)("p",null,"During the fetching of the object from the database, Doctrine will instantiate\nthe object and hydrate ",(0,r.kt)("inlineCode",{parentName:"p"},"$id")," and other properties that it manages. Afterward, it\nwill be our reconstitutor's turn to handle the ",(0,r.kt)("inlineCode",{parentName:"p"},"$paymentReceipt")," property.\nSimilar things also happen when the object is persisted to the database, or\nremoved."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"use Rekalogika\\Reconstitutor\\AbstractClassReconstitutor;\nuse Symfony\\Component\\HttpFoundation\\File\\File;\n\n/**\n * @extends AbstractClassReconstitutor<Order>\n */\nfinal class OrderReconstitutor extends AbstractClassReconstitutor\n{\n    /**\n     * The class that this reconstitutor manages. It can also be a super class\n     * or an interface.\n     */\n    public static function getClass(): string\n    {\n        return Order::class;\n    }\n\n    /**\n     * When the object is being saved, we check if the paymentReceipt has been\n     * just uploaded. If it is, we save it to a file.\n     */\n    public function onSave(object $order): void\n    {\n        $path = sprintf('/tmp/payment_receipt/%s', $order->getId());\n\n        $file = $this->get($order, 'paymentReceipt');\n\n        if ($file instanceof UploadedFile) {\n            file_put_contents($path, $file->getContent());\n            $this->set($order, 'paymentReceipt', new File($path));\n        }\n    }\n\n    /**\n     * When the object is being loaded from the database, we check if the\n     * supposed payment receipt is already saved. If it is, then we load the\n     * file to the property.\n     */\n    public function onLoad(object $order): void\n    {\n        $path = sprintf('/tmp/payment_receipt/%s', $order->getId());\n\n        if (file_exists($path)) {\n            $file = new File($path);\n        } else {\n            $file = null;\n        }\n\n        $this->set($order, 'paymentReceipt', $file);\n    }\n\n    /**\n     * If the order is being removed, we remove the associated payment receipt\n     * here.\n     */\n    public function onRemove(object $order): void\n    {\n        $path = sprintf('/tmp/payment_receipt/%s', $order->getId());\n\n        if (file_exists($path)) {\n            unlink($path);\n        }\n    }\n}\n")),(0,r.kt)("h2",{id:"reconstitution-of-classes-with-a-specific-php-attribute"},"Reconstitution of Classes With a Specific PHP Attribute"),(0,r.kt)("p",null,"Alternatively, you can also target classes with a specific PHP attribute. The\nfollowing modifies above example to use an attribute for targeting."),(0,r.kt)("p",null,"The entity class:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"use Symfony\\Component\\HttpFoundation\\File\\File;\nuse Symfony\\Component\\Uid\\UuidV7;\n\n// highlight-next-line\n#[MyAttribute]\nclass Order\n{\n    // ...\n}\n")),(0,r.kt)("p",null,"And the reconstitutor class:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"use Rekalogika\\Reconstitutor\\AbstractAttributeReconstitutor;\nuse Symfony\\Component\\HttpFoundation\\File\\File;\n\nfinal class OrderReconstitutor extends AbstractAttributeReconstitutor\n{\n    /**\n     * If the object has this attribute, then we are going to handle it.\n     */\n    // highlight-start\n    public static function getAttributeClass(): string\n    {\n        return MyAttribute::class;\n    }\n    // highlight-end\n\n    public function onSave(object $order): void\n    {\n        // ...\n    }\n\n    public function onLoad(object $order): void\n    {\n        // ...\n    }\n\n    public function onRemove(object $order): void\n    {\n        // ...\n    }\n}\n")),(0,r.kt)("h2",{id:"get-and-set-helpers"},(0,r.kt)("inlineCode",{parentName:"h2"},"get()")," and ",(0,r.kt)("inlineCode",{parentName:"h2"},"set()")," Helpers"),(0,r.kt)("p",null,"In reconstitution, you should get and set the object's properties directly,\nbypassing the getters and setters, just like Doctrine does. To help you with\nthat, the abstract classes provide the ",(0,r.kt)("inlineCode",{parentName:"p"},"get()")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"set()")," helpers."),(0,r.kt)("p",null,"These are just forwarders to our custom implementation of the familiar Symfony\nPropertyAccess (see ",(0,r.kt)("a",{parentName:"p",href:"/direct-property-access"},"rekalogika/direct-property-access"),"\nfor more information). Therefore, you can catch the same exceptions as you would\nwhen using the original Symfony PropertyAccess."))}d.isMDXComponent=!0}}]);