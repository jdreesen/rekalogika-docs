"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9759],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>b});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},c=Object.keys(e);for(o=0;o<c.length;o++)n=c[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(o=0;o<c.length;o++)n=c[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=o.createContext({}),s=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=s(e.components);return o.createElement(i.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(n),m=r,b=p["".concat(i,".").concat(m)]||p[m]||d[m]||c;return n?o.createElement(b,a(a({ref:t},u),{},{components:n})):o.createElement(b,a({ref:t},u))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,a=new Array(c);a[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[p]="string"==typeof e?e:r,a[1]=l;for(var s=2;s<c;s++)a[s]=n[s];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5043:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>d,frontMatter:()=>c,metadata:()=>l,toc:()=>s});var o=n(7462),r=(n(7294),n(3905));const c={title:"Abstraction"},a=void 0,l={unversionedId:"doctrine-collections-decorator/use-cases/abstraction",id:"doctrine-collections-decorator/use-cases/abstraction",title:"Abstraction",description:"Doctrine ORM uses collection objects that also implement the Selectable",source:"@site/docs/doctrine-collections-decorator/use-cases/13-abstraction.md",sourceDirName:"doctrine-collections-decorator/use-cases",slug:"/doctrine-collections-decorator/use-cases/abstraction",permalink:"/doctrine-collections-decorator/use-cases/abstraction",draft:!1,editUrl:"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/doctrine-collections-decorator/use-cases/13-abstraction.md",tags:[],version:"current",sidebarPosition:13,frontMatter:{title:"Abstraction"},sidebar:"docs",previous:{title:"Record Precounting",permalink:"/doctrine-collections-decorator/use-cases/record-precounting"},next:{title:"rekalogika/domain-event",permalink:"/domain-event/"}},i={},s=[],u={toc:s},p="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Doctrine ORM uses collection objects that also implement the ",(0,r.kt)("inlineCode",{parentName:"p"},"Selectable"),"\ninterface. It gives us the ",(0,r.kt)("inlineCode",{parentName:"p"},"matching()")," method that allows us to filter the\ncollection using a criteria object. It is very useful and convenient, but also\nan abstraction leak: the caller needs to know the internal structure of the\nmember entity class."),(0,r.kt)("p",null,"We can decorate the collection object to keep the ",(0,r.kt)("inlineCode",{parentName:"p"},"Selectable")," interface inside\nand expose more useful, higher-level methods that the caller can use."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"use Doctrine\\Common\\Collections\\Collection;\nuse Doctrine\\Common\\Collections\\Criteria;\nuse Doctrine\\Common\\Collections\\Selectable;\nuse Rekalogika\\Collections\\Decorator\\AbstractCollectionDecorator;\n\n/**\n * @extends AbstractCollectionDecorator<array-key,Book>\n */\nclass BookCollection extends AbstractCollectionDecorator\n{\n    /**\n     * @param Collection<array-key,Book> $collection\n     */\n    public function __construct(private Collection $collection)\n    {\n    }\n\n    protected function getWrapped(): Collection&Selectable\n    {\n        return $this->collection;\n    }\n\n    public function findByAuthor(string $author): self\n    {\n        $result = $this->matching(\n            Criteria::create()\n                ->where(Criteria::expr()->eq('author', $author))\n        );\n\n        return new self($result);\n    }\n}\n")),(0,r.kt)("p",null,"The one-to-many side:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"use Doctrine\\Common\\Collections\\ArrayCollection;\nuse Doctrine\\Common\\Collections\\Collection;\nuse Doctrine\\ORM\\Mapping as ORM;\n\n#[ORM\\Entity()]\nclass BookShelf\n{\n    /**\n     * @var Collection<array-key,Book>\n     */\n    #[ORM\\OneToMany(targetEntity: Book::class)]\n    private Collection $books;\n\n    #[ORM\\Column()]\n    private int $booksCount = 0;\n\n    public function __construct()\n    {\n        $this->books = new ArrayCollection();\n    }\n\n    public function getBooks(): BookCollection\n    {\n        return new BookCollection($this->books, $this->booksCount);\n    }\n}\n")),(0,r.kt)("p",null,"Then the caller will be able to do something like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"/** @var BookShelf $bookShelf */\n\n$booksByJohnDoe = $bookShelf->getBooks()->findByAuthor('John Doe');\n")))}d.isMDXComponent=!0}}]);