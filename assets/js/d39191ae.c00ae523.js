"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[669],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>y});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(r),d=a,y=c["".concat(s,".").concat(d)]||c[d]||m[d]||o;return r?n.createElement(y,l(l({ref:t},u),{},{components:r})):n.createElement(y,l({ref:t},u))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[c]="string"==typeof e?e:a,l[1]=i;for(var p=2;p<o;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6431:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const o={title:"rekalogika/temporary-url-bundle"},l=void 0,i={unversionedId:"temporary-url-bundle/index",id:"temporary-url-bundle/index",title:"rekalogika/temporary-url-bundle",description:"Symfony bundle for creating temporary URLs to your resources. You provide the",source:"@site/docs/temporary-url-bundle/index.md",sourceDirName:"temporary-url-bundle",slug:"/temporary-url-bundle/",permalink:"/temporary-url-bundle/",draft:!1,editUrl:"https://github.com/rekalogika/rekalogika-docs/docs/temporary-url-bundle/index.md",tags:[],version:"current",frontMatter:{title:"rekalogika/temporary-url-bundle"},sidebar:"docs",previous:{title:"rekalogika/reconstitutor",permalink:"/reconstitutor/"}},s={},p=[{value:"Installation",id:"installation",level:2},{value:"Creating a Resource Class",id:"creating-a-resource-class",level:2},{value:"Creating a Resource Server",id:"creating-a-resource-server",level:2},{value:"Generating a Temporary URL",id:"generating-a-temporary-url",level:2},{value:"In Twig Templates",id:"in-twig-templates",level:2}],u={toc:p},c="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Symfony bundle for creating temporary URLs to your resources. You provide the\nresource in a plain PHP object, and a service to turn it into a HTTP response.\nThe framework handles the rest."),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("p",null,"Install the package using Composer:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"composer require rekalogika/temporary-url-bundle\n")),(0,a.kt)("p",null,"Add the bundle to your ",(0,a.kt)("inlineCode",{parentName:"p"},"config/bundles.php"),". With Symfony Flex, this should be\ndone automatically."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php",metastring:"title=config/bundles.php",title:"config/bundles.php"},"return [\n    // ...\n    Rekalogika\\TemporaryUrl\\RekalogikaTemporaryUrlBundle::class => ['all' => true],\n];\n")),(0,a.kt)("p",null,"Include the route in ",(0,a.kt)("inlineCode",{parentName:"p"},"config/routes/rekalogika_temporary_url.yaml"),". With Symfony\nFlex, this should be done automatically."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"title=config/routes/rekalogika_temporary_url.yaml",title:"config/routes/rekalogika_temporary_url.yaml"},"rekalogika_temporary_url:\n    resource: '@RekalogikaTemporaryUrlBundle/config/routes.xml'\n    prefix: /_temporary\n")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"You may change the prefix if you like.")),(0,a.kt)("h2",{id:"creating-a-resource-class"},"Creating a Resource Class"),(0,a.kt)("p",null,"Create a class that describes your resource. There is no particular requirement\nfor this class, except that it must be serializable."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"class MyData\n{\n    public function __construct(private string $name)\n    {\n    }\n\n    public function getName(): string\n    {\n        return $this->name;\n    }\n}\n")),(0,a.kt)("admonition",{title:"Protip",type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"You can reuse your existing event, message, DTO, value objects, or\nother similar classes for this purpose.")),(0,a.kt)("h2",{id:"creating-a-resource-server"},"Creating a Resource Server"),(0,a.kt)("p",null,"Then create a server class or method that transforms the resource into an HTTP\nresponse. Use the ",(0,a.kt)("inlineCode",{parentName:"p"},"AsTemporaryUrlServer")," attribute to mark the method as a\ntemporary URL server. If the attribute is attached to the class, then the method\nis assumed to be ",(0,a.kt)("inlineCode",{parentName:"p"},"__invoke()"),". The method must accept the resource as its first\nargument, and return a ",(0,a.kt)("inlineCode",{parentName:"p"},"Response")," object."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"use Rekalogika\\TemporaryUrl\\Attribute\\AsTemporaryUrlServer;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\nclass MyDataServer\n{\n    #[AsTemporaryUrlServer]\n    public function respond(MyData $data): Response\n    {\n        return new Response('My name is ' . $data->getName());\n    }\n}\n")),(0,a.kt)("h2",{id:"generating-a-temporary-url"},"Generating a Temporary URL"),(0,a.kt)("p",null,"To generate a temporary URL, use the ",(0,a.kt)("inlineCode",{parentName:"p"},"TemporaryUrlGeneratorInterface")," service."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"use Rekalogika\\TemporaryUrl\\TemporaryUrlGeneratorInterface;\n\n/** @var TemporaryUrlGeneratorInterface $temporaryUrlGenerator */\n\n$resource = new MyData('123');\n$url = $temporaryUrlGenerator->generateUrl($resource);\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"TemporaryUrlGeneratorInterface::generateUrl()")," offers additional options:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"$ttl")," (",(0,a.kt)("inlineCode",{parentName:"li"},"int")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"DateInterval"),"): The time-to-live of the URL. Defaults to 30\nminutes."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"$pinSession")," (",(0,a.kt)("inlineCode",{parentName:"li"},"bool"),"): Whether to pin the URL to the session. Pinned URLs can\nonly be accessed by the same user that generated them. Defaults to ",(0,a.kt)("inlineCode",{parentName:"li"},"false"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"$referenceType"),"  (",(0,a.kt)("inlineCode",{parentName:"li"},"int"),"): The type of reference to be generated (one of the\n",(0,a.kt)("inlineCode",{parentName:"li"},"UrlGeneratorInterface::ABSOLUTE_*")," constants). Defaults to\n",(0,a.kt)("inlineCode",{parentName:"li"},"UrlGeneratorInterface::ABSOLUTE_PATH"),".")),(0,a.kt)("h2",{id:"in-twig-templates"},"In Twig Templates"),(0,a.kt)("p",null,"In a Twig template, you can use the filter ",(0,a.kt)("inlineCode",{parentName:"p"},"temporary_url")," to generate a\ntemporary URL."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-twig"},'{# my_data here is a resource object #}\n<a href="{{ my_data|temporary_url }}">Click here to download my data</a>\n')),(0,a.kt)("p",null,"The filter accepts the same options as the ",(0,a.kt)("inlineCode",{parentName:"p"},"generateUrl()")," method above."))}m.isMDXComponent=!0}}]);