"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1751],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),l=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return o.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},y=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(n),y=r,f=u["".concat(s,".").concat(y)]||u[y]||d[y]||a;return n?o.createElement(f,i(i({ref:t},p),{},{components:n})):o.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=y;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[u]="string"==typeof e?e:r,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}y.displayName="MDXCreateElement"},8827:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var o=n(7462),r=(n(7294),n(3905));const a={title:"Type Safety"},i=void 0,c={unversionedId:"doctrine-collections-decorator/use-cases/type-safety",id:"doctrine-collections-decorator/use-cases/type-safety",title:"Type Safety",description:"We can use collection decoration to ensure that the items in a collection are of",source:"@site/docs/doctrine-collections-decorator/use-cases/11-type-safety.md",sourceDirName:"doctrine-collections-decorator/use-cases",slug:"/doctrine-collections-decorator/use-cases/type-safety",permalink:"/doctrine-collections-decorator/use-cases/type-safety",draft:!1,editUrl:"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/doctrine-collections-decorator/use-cases/11-type-safety.md",tags:[],version:"current",sidebarPosition:11,frontMatter:{title:"Type Safety"},sidebar:"docs",previous:{title:"Usage",permalink:"/doctrine-collections-decorator/usage"},next:{title:"Record Precounting",permalink:"/doctrine-collections-decorator/use-cases/record-precounting"}},s={},l=[{value:"The Decorator Class",id:"the-decorator-class",level:2},{value:"Usage in the <code>one-to-many</code> Side",id:"usage-in-the-one-to-many-side",level:2}],p={toc:l},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"We can use collection decoration to ensure that the items in a collection are of\na certain type."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"We find this usage superfluous most of the time considering static analysis\ntools can do a pretty good job these days. But it is also one of the most common\nobjectives of people asking to have a custom Doctrine collection.")),(0,r.kt)("h2",{id:"the-decorator-class"},"The Decorator Class"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"/**\n * @extends AbstractCollectionDecorator<array-key,Book>\n */\nclass Books extends AbstractCollectionDecorator\n{\n    /**\n     * @param Collection<array-key,Book> $wrapped\n     */\n    public function __construct(private Collection $wrapped)\n    {\n    }\n\n    #[\\Override]\n    protected function getWrapped(): Collection\n    {\n        return $this->wrapped;\n    }\n\n    // highlight-start\n    private static function assert(mixed $book): Book\n    {\n        if (!$book instanceof Book) {\n            throw new \\InvalidArgumentException('Invalid input');\n        }\n\n        return $book;\n    }\n    // highlight-end\n\n    #[\\Override]\n    public function add(mixed $element): void\n    {\n        // highlight-next-line\n        $this->getWrapped()->add(self::assert($element));\n    }\n\n    #[\\Override]\n    public function set(string|int $key, mixed $value): void\n    {\n        // highlight-next-line\n        $this->getWrapped()->set($key, self::assert($value));\n    }\n}\n")),(0,r.kt)("h2",{id:"usage-in-the-one-to-many-side"},"Usage in the ",(0,r.kt)("inlineCode",{parentName:"h2"},"one-to-many")," Side"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"use Doctrine\\Common\\Collections\\ArrayCollection;\nuse Doctrine\\Common\\Collections\\Collection;\nuse Doctrine\\ORM\\Mapping as ORM;\n\n#[ORM\\Entity()]\nclass BookShelf\n{\n    /**\n     * @var Collection<array-key,Book>\n     */\n    #[ORM\\OneToMany(targetEntity: Book::class)]\n    private Collection $books;\n\n    public function __construct()\n    {\n        $this->books = new ArrayCollection();\n    }\n\n    public function getBooks(): Books\n    {\n        // highlight-next-line\n        return new Books($this->books);\n    }\n}\n")))}d.isMDXComponent=!0}}]);