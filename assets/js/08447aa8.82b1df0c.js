"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4947],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>u});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=i.createContext({}),p=function(e){var t=i.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},m=function(e){var t=p(e.components);return i.createElement(o.Provider,{value:t},e.children)},c="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},y=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=p(n),y=r,u=c["".concat(o,".").concat(y)]||c[y]||f[y]||a;return n?i.createElement(u,s(s({ref:t},m),{},{components:n})):i.createElement(u,s({ref:t},m))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=y;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[c]="string"==typeof e?e:r,s[1]=l;for(var p=2;p<a;p++)s[p]=n[p];return i.createElement.apply(null,s)}return i.createElement.apply(null,n)}y.displayName="MDXCreateElement"},4327:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>p,toc:()=>c});var i=n(7462),r=(n(7294),n(3905)),a=n(4996),s=n(941);const l={title:"Concepts & Terms"},o=void 0,p={unversionedId:"file/concepts",id:"file/concepts",title:"Concepts & Terms",description:"Terms",source:"@site/docs/file/02-concepts.md",sourceDirName:"file",slug:"/file/concepts",permalink:"/file/concepts",draft:!1,editUrl:"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/file/02-concepts.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Concepts & Terms"},sidebar:"docs",previous:{title:"Installation & Configuration",permalink:"/file/installation"},next:{title:"Using File & FileRepository",permalink:"/file/file"}},m={},c=[{value:"Terms",id:"terms",level:2},{value:"Class Diagram",id:"class-diagram",level:2},{value:"Keys vs Paths",id:"keys-vs-paths",level:2}],f={toc:c},y="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(y,(0,i.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"terms"},"Terms"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"FileRepository"),": Manages files in the framework. Implements\n",(0,r.kt)("inlineCode",{parentName:"li"},"FileRepositoryInterface"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"File"),": A file in a Flysystem filesystem. Implements ",(0,r.kt)("inlineCode",{parentName:"li"},"FileInterface"),". Each\nfile is identified by a filesystem identifier and a key. A null filesystem\nidentifier denotes that the file is in the local filesystem."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"FilePointer"),": A pointer to a file. Implements ",(0,r.kt)("inlineCode",{parentName:"li"},"FilePointerInterface"),". Like\na file, a file pointer has a filesystem identifier and a key, but nothing\nelse."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Directory"),": Contains files, file pointers, and other directories."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Filesystem"),": A Flysystem filesystem. Implements Flysystem's\n",(0,r.kt)("inlineCode",{parentName:"li"},"FilesystemOperator"),". The caller should not use it directly but use the\n",(0,r.kt)("inlineCode",{parentName:"li"},"FileRepository")," instead."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Local filesystem"),": A special Flysystem filesystem initialized by the\nframework that points to an unscoped local filesystem, using '/' as its root\nlocation.")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"A Flysystem filesystem using ",(0,r.kt)("inlineCode",{parentName:"p"},"LocalFilesystemAdapter")," that is set up by the user\nis not considered a local filesystem in this document.")),(0,r.kt)("h2",{id:"class-diagram"},"Class Diagram"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"'Interface' in the names are stripped for brevity. Simple getters are\nrepresented by properties.")),(0,r.kt)(s.Z,{alt:"File classes",sources:{light:(0,a.Z)("/diagrams/light/file.svg"),dark:(0,a.Z)("/diagrams/dark/file.svg")},width:"100%",mdxType:"ThemedImage"}),(0,r.kt)("h2",{id:"keys-vs-paths"},"Keys vs Paths"),(0,r.kt)("p",null,"The library encourages using the concept of 'keys', not 'paths'. Although the\nkey can appear similar to a path, the main difference is that the filename is\nnot part of the key, but part of the file's metadata. The key is similar to the\nprimary key of a database table. You can change the 'name' field, but the ID\nusually stays the same."))}u.isMDXComponent=!0}}]);