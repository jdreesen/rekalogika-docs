"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3197],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>b});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=o.createContext({}),l=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=l(e.components);return o.createElement(i.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(n),m=r,b=p["".concat(i,".").concat(m)]||p[m]||d[m]||a;return n?o.createElement(b,c(c({ref:t},u),{},{components:n})):o.createElement(b,c({ref:t},u))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,c=new Array(a);c[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[p]="string"==typeof e?e:r,c[1]=s;for(var l=2;l<a;l++)c[l]=n[l];return o.createElement.apply(null,c)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7087:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>b,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var o=n(7462),r=(n(7294),n(3905)),a=n(4996),c=n(941);const s={title:"Decorating Member Objects"},i=void 0,l={unversionedId:"doctrine-collections-decorator/cookbook/decorating-members",id:"doctrine-collections-decorator/cookbook/decorating-members",title:"Decorating Member Objects",description:"We can use a collection decorator to dynamically decorate the members of the",source:"@site/docs/doctrine-collections-decorator/cookbook/14-decorating-members.md",sourceDirName:"doctrine-collections-decorator/cookbook",slug:"/doctrine-collections-decorator/cookbook/decorating-members",permalink:"/doctrine-collections-decorator/cookbook/decorating-members",draft:!1,editUrl:"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/doctrine-collections-decorator/cookbook/14-decorating-members.md",tags:[],version:"current",sidebarPosition:14,frontMatter:{title:"Decorating Member Objects"},sidebar:"docs",previous:{title:"Selectable Abstraction",permalink:"/doctrine-collections-decorator/cookbook/selectable-abstraction"},next:{title:"Loading Prevention in Extra Lazy Collections",permalink:"/doctrine-collections-decorator/cookbook/extra-lazy-load-prevention"}},u={},p=[{value:"<code>BusinessContract</code> Entity &amp; Superclass",id:"businesscontract-entity--superclass",level:2},{value:"Decorator for <code>BusinessContract</code>",id:"decorator-for-businesscontract",level:2},{value:"Decorator for the <code>BusinessContract</code> Collection",id:"decorator-for-the-businesscontract-collection",level:2},{value:"Usage in the <code>PartnerCompany</code> Object",id:"usage-in-the-partnercompany-object",level:2},{value:"Class Diagram",id:"class-diagram",level:2}],d={toc:p},m="wrapper";function b(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"We can use a collection decorator to dynamically decorate the members of the\ncollection on the fly."),(0,r.kt)("p",null,"In this example, we will be using an example of a one-to-many association\nbetween ",(0,r.kt)("inlineCode",{parentName:"p"},"PartnerCompany")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"BusinessContract")," entities. The ",(0,r.kt)("inlineCode",{parentName:"p"},"PartnerCompany"),"\nentity has a collection of ",(0,r.kt)("inlineCode",{parentName:"p"},"BusinessContract")," entities."),(0,r.kt)("h2",{id:"businesscontract-entity--superclass"},(0,r.kt)("inlineCode",{parentName:"h2"},"BusinessContract")," Entity & Superclass"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"use Doctrine\\ORM\\Mapping as ORM;\n\ninterface BusinessContractInterface {\n    // ...\n}\n\n#[ORM\\Entity()]\nclass BusinessContract implements BusinessContractInterface {\n    // ...\n}\n")),(0,r.kt)("h2",{id:"decorator-for-businesscontract"},"Decorator for ",(0,r.kt)("inlineCode",{parentName:"h2"},"BusinessContract")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"class BusinessContractDecorator implements BusinessContractInterface {\n    public function __construct(private BusinessContractInterface $wrapped)\n    {\n    }\n\n    // ...\n}\n")),(0,r.kt)("h2",{id:"decorator-for-the-businesscontract-collection"},"Decorator for the ",(0,r.kt)("inlineCode",{parentName:"h2"},"BusinessContract")," Collection"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"use Doctrine\\Common\\Collections\\Collection;\nuse Doctrine\\Common\\Collections\\Criteria;\nuse Doctrine\\Common\\Collections\\Selectable;\nuse Rekalogika\\Collections\\Decorator\\Decorator\\CollectionDecorator;\n\n/**\n * @extends CollectionDecorator<array-key,BusinessContractInterface>\n */\nclass BusinessContractCollectionDecorator extends CollectionDecorator\n{\n    #[\\Override]\n    public function get(string|int $key): BusinessContractInterface\n    {\n        return new BusinessContractDecorator(\n            $this->getWrapped()->get($key)\n        );\n    }\n\n    #[\\Override]\n    public function getIterator(): \\Traversable\n    {\n        foreach ($this->getWrapped() as $key => $value) {\n            yield $key => new BusinessContractDecorator($value);\n        }\n    }\n\n    // We should override all the other methods that returns\n    // BusinessContractInterface, but for conciseness, we skip them here.\n}\n")),(0,r.kt)("h2",{id:"usage-in-the-partnercompany-object"},"Usage in the ",(0,r.kt)("inlineCode",{parentName:"h2"},"PartnerCompany")," Object"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"use Doctrine\\Common\\Collections\\ArrayCollection;\nuse Doctrine\\Common\\Collections\\Collection;\nuse Doctrine\\ORM\\Mapping as ORM;\n\n#[ORM\\Entity()]\nclass PartnerCompany\n{\n    /**\n     * @var Collection<array-key,BusinessContractInterface>\n     */\n    #[ORM\\OneToMany(targetEntity: BusinessContract::class)]\n    private Collection $businessContracts;\n\n    public function __construct()\n    {\n        $this->businessContracts = new ArrayCollection();\n    }\n\n    public function getBusinessContracts(): BusinessContractCollectionDecorator\n    {\n        return new BusinessContractCollectionDecorator($this->businessContracts);\n    }\n}\n")),(0,r.kt)("h2",{id:"class-diagram"},"Class Diagram"),(0,r.kt)("p",null,"Now for a bird eye view of our classes."),(0,r.kt)(c.Z,{alt:"File classes",sources:{light:(0,a.Z)("/diagrams/light/decorating-members.svg"),dark:(0,a.Z)("/diagrams/dark/decorating-members.svg")},width:"100%",mdxType:"ThemedImage"}))}b.isMDXComponent=!0}}]);