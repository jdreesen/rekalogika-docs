"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[737],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(n),f=a,m=u["".concat(c,".").concat(f)]||u[f]||d[f]||i;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=f;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3819:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const i={title:"Usage"},o=void 0,s={unversionedId:"reconstitutor/usage",id:"reconstitutor/usage",title:"Usage",description:"Because everyone knows about file uploads, we are going to use it as an",source:"@site/docs/reconstitutor/02-usage.md",sourceDirName:"reconstitutor",slug:"/reconstitutor/usage",permalink:"/reconstitutor/usage",draft:!1,editUrl:"https://github.com/rekalogika/rekalogika-docs/edit/main/docs/reconstitutor/02-usage.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Usage"},sidebar:"docs",previous:{title:"Introduction & Installation",permalink:"/reconstitutor/intro"},next:{title:"rekalogika/temporary-url-bundle",permalink:"/temporary-url-bundle/"}},c={},l=[{value:"Class Reconstitutor",id:"class-reconstitutor",level:2},{value:"Reconstitutor Abstract Class",id:"reconstitutor-abstract-class",level:2}],p={toc:l},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Because everyone knows about file uploads, we are going to use it as an\nexample, even if you probably won't use this framework as a means for handling\nfile uploads."),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"We also provide ",(0,a.kt)("a",{parentName:"p",href:"../file"},(0,a.kt)("inlineCode",{parentName:"a"},"rekalogika/file"))," framework that handles file uploads\nand so much more. It also utilizes this library behind the scenes.")),(0,a.kt)("h2",{id:"class-reconstitutor"},"Class Reconstitutor"),(0,a.kt)("p",null,"This will apply to objects that are instances of a specific class, subclasses\nof a specific class, or implement a specific interface."),(0,a.kt)("p",null,"Suppose you have an ",(0,a.kt)("inlineCode",{parentName:"p"},"Order")," object that stores a payment receipt in the\n",(0,a.kt)("inlineCode",{parentName:"p"},"paymentReceipt")," property:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"use Symfony\\Component\\HttpFoundation\\File\\File;\nuse Symfony\\Component\\Uid\\UuidV7;\n\nclass Order\n{\n    private string $id;\n    private ?File $paymentReceipt = null;\n\n    public function __construct()\n    {\n        $this->id = new UuidV7;\n    }\n\n    public function getId(): string\n    {\n        return $this->id;\n    }\n\n    public function getPaymentReceipt(): ?File\n    {\n        return $this->paymentReceipt;\n    }\n\n    public function setPaymentReceipt(File $paymentReceipt): void\n    {\n        $this->paymentReceipt = $paymentReceipt;\n    }\n}\n")),(0,a.kt)("p",null,"During the fetching of the object from the database, Doctrine will instantiate\nthe object and hydrate ",(0,a.kt)("inlineCode",{parentName:"p"},"$id")," and other properties that it manages. Afterward, it\nwill be our reconstitutor's turn to handle the ",(0,a.kt)("inlineCode",{parentName:"p"},"$paymentReceipt")," property.\nSimilar things also happen when the object is persisted to the database, or\nremoved."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"use Rekalogika\\Reconstitutor\\AbstractClassReconstitutor;\nuse Symfony\\Component\\HttpFoundation\\File\\File;\n\n/**\n * @extends AbstractClassReconstitutor<Order>\n */\nfinal class OrderReconstitutor extends AbstractClassReconstitutor\n{\n    /**\n     * The class that this reconstitutor manages. It can also be a super class\n     * or an interface.\n     */\n    public static function getClass(): string\n    {\n        return Order::class;\n    }\n\n    /**\n     * When the object is being saved, we check if the paymentReceipt has been\n     * just uploaded. If it is, we save it to a file.\n     */\n    public function onSave(object $order): void\n    {\n        $path = sprintf('/tmp/payment_receipt/%s', $order->getId());\n\n        $file = $this->get($order, 'paymentReceipt');\n\n        if ($file instanceof UploadedFile) {\n            file_put_contents($path, $file->getContent());\n            $this->set($order, 'paymentReceipt', new File($path));\n        }\n    }\n\n    /**\n     * When the object is being loaded from the database, we check if the\n     * supposed payment receipt is already saved. If it is, then we load the\n     * file to the property.\n     */\n    public function onLoad(object $order): void\n    {\n        $path = sprintf('/tmp/payment_receipt/%s', $order->getId());\n\n        if (file_exists($path)) {\n            $file = new File($path);\n        } else {\n            $file = null;\n        }\n\n        $this->set($order, 'paymentReceipt', $file);\n    }\n\n    /**\n     * If the order is being removed, we remove the associated payment receipt\n     * here.\n     */\n    public function onRemove(object $order): void\n    {\n        $path = sprintf('/tmp/payment_receipt/%s', $order->getId());\n\n        if (file_exists($path)) {\n            unlink($path);\n        }\n    }\n}\n")),(0,a.kt)("h2",{id:"reconstitutor-abstract-class"},"Reconstitutor Abstract Class"),(0,a.kt)("p",null,"The example above uses ",(0,a.kt)("inlineCode",{parentName:"p"},"AbstractClassReconstitutor")," where our target object is\nmatched using the class provided by ",(0,a.kt)("inlineCode",{parentName:"p"},"getClass()"),". There is also\n",(0,a.kt)("inlineCode",{parentName:"p"},"AbstractAttributeReconstitutor")," that operates on objects that have a specific\nPHP attribute."))}d.isMDXComponent=!0}}]);